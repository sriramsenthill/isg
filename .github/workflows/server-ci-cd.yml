name: Build and Deploy to EC2

on:
  push:
    branches:
      - pavan

jobs:
  build-and-push-to-ecr:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          IMAGE_TAG=latest
          IMAGE_URI=$ECR_REPOSITORY:$IMAGE_TAG

          echo "Building Docker image..."
          docker build -t $IMAGE_URI .

          echo "Pushing Docker image to ECR..."
          docker push $IMAGE_URI

          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

  deploy-to-ec2:
    name: Deploy Docker Container to EC2
    needs: build-and-push-to-ecr
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH Client
        run: sudo apt-get install -y openssh-client

      - name: Pull and Run Docker Container on EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          IMAGE_URI: ${{ env.IMAGE_URI }}
        run: |
          echo "$EC2_KEY" > ec2-key.pem
          chmod 600 ec2-key.pem

          echo "Connecting to EC2 instance..."
          ssh -i ec2-key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            echo "Stopping and removing old container..."
            docker stop app || true
            docker rm app || true

            echo "Pulling Docker image from ECR..."
            docker pull $IMAGE_URI

            echo "Running Docker container..."
            docker run -d --name app -p 3000:3000 $IMAGE_URI
          EOF
